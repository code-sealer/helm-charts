{{- if .Values.sidecar.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: codesealer-mutating-webhook-patch
  labels:
   {{- include "webhook.labels" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
data:
  patch.yaml: |
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      imagePullSecrets:
      - name: {{ template "codesealer.imagePullSecretName" . }}
      {{- if .Values.sidecar.enabled }}
      initContainers:
        - name: {{ .Values.sidecar.initContainers.name }}
          image: "{{ .Values.image.repository }}/{{ .Values.sidecar.initContainers.image }}:{{ .Values.sidecar.initContainers.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 0
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
          command:
            - /bin/sh
          args:
            - -c
            - iptables -t nat -A PREROUTING -p tcp -i eth0 --dport {{ .Values.sidecar.ingress.port }} -j REDIRECT --to-port {{ .Values.worker.config.network.listen }} && iptables -t nat --list && echo IPtables Pre-Route Completed Succesfully!
      {{- end }}
      containers:
        - name: {{ include "worker.name" . }}
          image: "{{ .Values.image.repository }}/{{ .Values.worker.image }}:{{ .Values.worker.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ if .Values.worker.controlURL }}
          args: ["--control", "{{ .Values.worker.controlURL}}", "--clusterKey", "{{ .Values.worker.clusterKey}}"]
          {{ end }}
          ports:
            - containerPort: {{ .Values.worker.config.network.listen }}
              protocol: TCP
          volumeMounts:
            - name: config-toml
              mountPath: /etc/codesealer-core/config.toml
              subPath: config.toml
            - name: {{ .Values.worker.cert.name }}
              mountPath: /etc/codesealer-core/certs
              readOnly: true
            - name: modsec-conf
              mountPath: /etc/codesealer-core/modsec.conf
              subPath: modsec.conf
            - name: modsecurity-conf
              mountPath: /etc/codesealer-core/modsecurity/modsecurity.conf
              subPath: modsecurity.conf
            - name: crs-setup-conf
              mountPath: /etc/codesealer-core/modsecurity/crs-setup.conf
              subPath: crs-setup.conf
          env:
          - name: REDIS_PASSWORD
            value: {{ .Values.redis.auth.password }}
      volumes:
        - name: config-toml
          configMap:
            name: config-toml
        - name: {{ .Values.worker.cert.name }}
          secret:
            secretName: {{ .Values.worker.cert.name }}
        - name: modsec-conf
          configMap:
            name: modsec-conf
        - name: modsecurity-conf
          configMap:
            name: modsecurity-conf
        - name: crs-setup-conf
          configMap:
            name: crs-setup-conf
{{- end }}
